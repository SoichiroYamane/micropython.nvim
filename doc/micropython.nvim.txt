*micropython.nvim.txt*        For NVIM v0.8.0       Last change: 2024 April 19

==============================================================================
Table of Contents                         *micropython.nvim-table-of-contents*

1. micropython_nvim                        |micropython.nvim-micropython_nvim|
  - Introduction              |micropython.nvim-micropython_nvim-introduction|
  - Goals                            |micropython.nvim-micropython_nvim-goals|
  - Features                      |micropython.nvim-micropython_nvim-features|
  - Requirements              |micropython.nvim-micropython_nvim-requirements|
  - Quickstart                  |micropython.nvim-micropython_nvim-quickstart|
  - Installation              |micropython.nvim-micropython_nvim-installation|
  - Usage                            |micropython.nvim-micropython_nvim-usage|

==============================================================================
1. micropython_nvim                        *micropython.nvim-micropython_nvim*


INTRODUCTION                  *micropython.nvim-micropython_nvim-introduction*

micropython_nvim is a plugin that aims to make it easier and more enjoyable to
work on micropython projects in Neovim. See the |micropython.nvim-quickstart|
section to get started.


GOALS                                *micropython.nvim-micropython_nvim-goals*

- Allows you to run and upload your python files directly to your chosen micro-controller straight from Neovim
- Allows general file management
- Allows easy management of port, baudrate, and other settings
- Allows easy set up of project environment - COMING SOON
    - Create a new project, with project specific settings
- Easy access to the REPL


FEATURES                          *micropython.nvim-micropython_nvim-features*

- **Run** local python files on your micro-controller
- **Upload** local python files to your micro-controller
- **REPL** access
- **File management**
- **Project management** - COMING SOON


REQUIREMENTS                  *micropython.nvim-micropython_nvim-requirements*

- Neovim >= 0.9 <https://github.com/neovim/neovim/releases/tag/v0.9.0>
- toggleterm.nvim <https://github.com/akinsho/toggleterm.nvim>
- dressing.nvim <https://github.com/stevearc/dressing.nvim>(optional)
- Adafruit ampy <>
- rshell <>


QUICKSTART                      *micropython.nvim-micropython_nvim-quickstart*

- |micropython.nvim-install| micropython_nvim using your preferred package manager
- Add a keybind to `run` function

>lua
    -- Lua
    vim.keymap.set("n", "<leader>mr", require("micropython_nvim").run)
<

**Next steps**

- Add a |micropython.nvim-statusline-component|


INSTALLATION                  *micropython.nvim-micropython_nvim-installation*

lazy.nvim ~

>lua
    {
        "jim-at-jibba/micropython.nvim",
        dependencies = { "akinsho/toggleterm.nvim", "stevearc/dressing.nvim" },
    }
<

packer ~

>lua
    use {
        "jim-at-jibba/micropython.nvim",
        requires = { "akinsho/toggleterm.nvim", "stevearc/dressing.nvim" },
    }
<


USAGE                                *micropython.nvim-micropython_nvim-usage*

- `:MPRun` runs current buffer on the micro-controller
- `:MPSetPort` sets the port
- `:MPSetBaud` sets the baudrate
- `:MPRepl` opens the REPL


STATUSLINE ~

A statusline component can be easily added to show whether a buffer is tagged.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
